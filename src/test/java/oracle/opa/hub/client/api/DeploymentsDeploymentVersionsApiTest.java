/*
 * Hub Administration
 * This version of the API allows management of OPA Hub users, deployments, and version information.
 *
 * OpenAPI spec version: 12.2.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package oracle.opa.hub.client.api;

import oracle.opa.hub.client.ApiException;
import oracle.opa.hub.client.api.DeploymentsDeploymentVersionsApi;
import oracle.opa.hub.client.model.DeploymentVersion;
import oracle.opa.hub.client.model.DeploymentVersions;
import oracle.opa.hub.client.model.Snapshot;

import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeploymentsDeploymentVersionsApi
 */
@Ignore
public class DeploymentsDeploymentVersionsApiTest {

    private final DeploymentsDeploymentVersionsApi api = new DeploymentsDeploymentVersionsApi();

    
    /**
     * Delete a deployment version
     *
     * This operation will delete a deployment version
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDeploymentVersionTest() throws ApiException {
        String deploymentVersionVersionNo = null;
        String deploymentName = null;
        api.deleteDeploymentVersion(deploymentVersionVersionNo, deploymentName);

        // TODO: test validations
    }
    
    /**
     * Get a deployment version
     *
     * This operation will get a deployment version. The deployment version id is an integer, or the aliases \&quot;latest\&quot; or \&quot;active\&quot;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeploymentVersionTest() throws ApiException {
        String deploymentVersionVersionNo = null;
        String deploymentName = null;
        DeploymentVersion response = api.getDeploymentVersion(deploymentVersionVersionNo, deploymentName);

        // TODO: test validations
    }
    
    /**
     * Get one or more deployment versions
     *
     * This operation will get one or more deployment versions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeploymentVersionsTest() throws ApiException {
        String deploymentName = null;
        DeploymentVersions response = api.getDeploymentVersions(deploymentName);

        // TODO: test validations
    }
    
    /**
     * Get a snapshot
     *
     * This operation will get a deployment snapshot as a base-64 encoded string. To receive a deployment snapshot as binary data, send an HTTP Accept header of \&quot;Accept: application/zip\&quot;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSnapshotTest() throws ApiException {
        String deploymentVersionVersionNo = null;
        String deploymentName = null;
        Snapshot response = api.getSnapshot(deploymentVersionVersionNo, deploymentName);

        // TODO: test validations
    }
    
    /**
     * Insert one or more deployment versions
     *
     * This operation will insert one or more deployment versions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void insertDeploymentVersionsTest() throws ApiException {
        String deploymentName = null;
        DeploymentVersions body = null;
        api.insertDeploymentVersions(deploymentName, body);

        // TODO: test validations
    }
    
    /**
     * Update a deployment version
     *
     * This operation will update a deployment version
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDeploymentVersionTest() throws ApiException {
        String deploymentVersionVersionNo = null;
        String deploymentName = null;
        DeploymentVersion body = null;
        DeploymentVersion response = api.updateDeploymentVersion(deploymentVersionVersionNo, deploymentName, body);

        // TODO: test validations
    }
    
}
